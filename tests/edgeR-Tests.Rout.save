
R version 2.14.0 (2011-10-31)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i386-pc-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(edgeR)
Loading required package: limma
> 
> set.seed(0); u <- runif(100)
> 
> # generate raw counts from NB, create list object
> y <- matrix(rnbinom(80,size=5,mu=10),nrow=20)
> y <- rbind(0,c(0,0,2,2),y)
> rownames(y) <- paste("Tag",1:nrow(y),sep=".")
> d <- DGEList(counts=y,group=rep(1:2,each=2),lib.size=1001:1004)
> 
> # estimate common dispersion and find differences in expression
> d <- estimateCommonDisp(d)
> d$common.dispersion
[1] 0.210292
> de <- exactTest(d)
Comparison of groups:  2 - 1 
> summary(de$table)
    logConc            logFC            p.value       
 Min.   :-50.016   Min.   :-1.7577   Min.   :0.01976  
 1st Qu.: -7.088   1st Qu.:-0.4922   1st Qu.:0.33120  
 Median : -6.887   Median : 0.2280   Median :0.56514  
 Mean   : -9.818   Mean   : 1.8656   Mean   :0.54504  
 3rd Qu.: -6.552   3rd Qu.: 0.5323   3rd Qu.:0.81052  
 Max.   : -5.804   Max.   :41.0452   Max.   :1.00000  
> topTags(de)
Comparison of groups:  2-1 
          logConc      logFC    P.Value       FDR
Tag.17  -6.760425  2.0751158 0.01975954 0.4347099
Tag.21  -7.091791 -1.7577397 0.06131012 0.6744114
Tag.6   -7.808390 -1.6811127 0.12446044 0.8982100
Tag.2  -29.493440 41.0452294 0.16331090 0.8982100
Tag.16  -6.688425  0.9447004 0.29050785 0.9655885
Tag.20  -6.448417  0.8637539 0.31736609 0.9655885
Tag.12  -5.803735  0.7130994 0.37271028 0.9655885
Tag.19  -6.980938 -0.8103825 0.40166354 0.9655885
Tag.3   -6.694062 -0.7395680 0.42139935 0.9655885
Tag.8   -7.565709 -0.8107246 0.47117217 0.9655885
> 
> d <- estimateTagwiseDisp(d,trend="none")
> summary(d$tagwise.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.1757  0.1896  0.1989  0.2063  0.2185  0.2677 
> de <- exactTest(d,dispersion="common")
Comparison of groups:  2 - 1 
> topTags(de)
Comparison of groups:  2-1 
          logConc      logFC    P.Value       FDR
Tag.17  -6.760425  2.0751158 0.01975954 0.4347099
Tag.21  -7.091791 -1.7577397 0.06131012 0.6744114
Tag.6   -7.808390 -1.6811127 0.12446044 0.8982100
Tag.2  -29.493440 41.0452294 0.16331090 0.8982100
Tag.16  -6.688425  0.9447004 0.29050785 0.9655885
Tag.20  -6.448417  0.8637539 0.31736609 0.9655885
Tag.12  -5.803735  0.7130994 0.37271028 0.9655885
Tag.19  -6.980938 -0.8103825 0.40166354 0.9655885
Tag.3   -6.694062 -0.7395680 0.42139935 0.9655885
Tag.8   -7.565709 -0.8107246 0.47117217 0.9655885
> 
> de <- exactTest(d)
Comparison of groups:  2 - 1 
> topTags(de)
Comparison of groups:  2-1 
          logConc      logFC    P.Value       FDR
Tag.17  -6.760427  2.0751182 0.01327001 0.2919403
Tag.21  -7.091794 -1.7577426 0.05683886 0.6252275
Tag.6   -7.808390 -1.6811049 0.11460208 0.8404152
Tag.2  -29.493440 41.0452294 0.16126207 0.8869414
Tag.16  -6.688422  0.9446983 0.28103256 0.9669238
Tag.20  -6.448420  0.8637579 0.30234789 0.9669238
Tag.12  -5.803733  0.7130972 0.37917895 0.9669238
Tag.19  -6.980941 -0.8103856 0.40762735 0.9669238
Tag.3   -6.694061 -0.7395750 0.40856822 0.9669238
Tag.8   -7.565712 -0.8107592 0.49005179 0.9669238
> 
> d <- estimateTagwiseDisp(d,trend="movingave")
> summary(d$tagwise.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.08593 0.16650 0.19870 0.20810 0.25670 0.34120 
> de <- exactTest(d)
Comparison of groups:  2 - 1 
> topTags(de)
Comparison of groups:  2-1 
          logConc      logFC    P.Value       FDR
Tag.17  -6.760423  2.0751137 0.02682344 0.5315628
Tag.21  -7.091802 -1.7577484 0.04832389 0.5315628
Tag.6   -7.808390 -1.6811092 0.11987570 0.8790885
Tag.2  -29.493440 41.0452295 0.17835675 0.9705456
Tag.16  -6.688418  0.9446959 0.27081986 0.9705456
Tag.20  -6.448409  0.8637455 0.35006702 0.9705456
Tag.19  -6.980914 -0.8103580 0.35731405 0.9705456
Tag.3   -6.694062 -0.7395723 0.41348640 0.9705456
Tag.12  -5.803715  0.7130717 0.46923756 0.9705456
Tag.22  -6.507073  0.5816917 0.50927109 0.9705456
> 
> summary(exactTest(d,rejection="smallp")$table$p.value)
Comparison of groups:  2 - 1 
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.02682 0.35190 0.53020 0.54570 0.78530 1.00000 
> summary(exactTest(d,rejection="deviance")$table$p.value)
Comparison of groups:  2 - 1 
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.02682 0.35190 0.53020 0.54570 0.78530 1.00000 
> 
> d2 <- estimateTagwiseDisp(d,trend="tricube")
> summary(d2$tagwise.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.08434 0.13940 0.20790 0.19780 0.24440 0.31640 
> de <- exactTest(d2)
Comparison of groups:  2 - 1 
> topTags(de)
Comparison of groups:  2-1 
          logConc      logFC    P.Value       FDR
Tag.21  -7.091847 -1.7577746 0.01721457 0.2162118
Tag.17  -6.760425  2.0751158 0.01965562 0.2162118
Tag.6   -7.808389 -1.6811278 0.14659687 0.8965962
Tag.2  -29.493440 41.0452294 0.16301749 0.8965962
Tag.16  -6.688417  0.9446948 0.26640486 0.9536606
Tag.19  -6.980905 -0.8103488 0.34142207 0.9536606
Tag.20  -6.448410  0.8637469 0.34452319 0.9536606
Tag.3   -6.694057 -0.7396121 0.34897530 0.9536606
Tag.12  -5.803731  0.7130937 0.39013389 0.9536606
Tag.22  -6.507074  0.5816860 0.51670517 0.9767527
> 
> # mglmOneWay
> design <- model.matrix(~group,data=d$samples)
> mglmOneWay(d[1:10,],design,dispersion=0.2)
$coefficients
        (Intercept)        group2
 [1,] -1.000000e+08  0.000000e+00
 [2,] -1.000000e+08  1.000000e+08
 [3,]  2.525729e+00 -5.108256e-01
 [4,]  2.525729e+00  1.484200e-01
 [5,]  2.140066e+00 -1.941560e-01
 [6,]  2.079442e+00 -1.163151e+00
 [7,]  2.014903e+00  2.363888e-01
 [8,]  1.945910e+00 -5.596158e-01
 [9,]  1.504077e+00  2.006707e-01
[10,]  2.302585e+00  2.623643e-01

$fitted.values
      [,1] [,2] [,3] [,4]
 [1,]  0.0  0.0  0.0  0.0
 [2,]  0.0  0.0  2.0  2.0
 [3,] 12.5 12.5  7.5  7.5
 [4,] 12.5 12.5 14.5 14.5
 [5,]  8.5  8.5  7.0  7.0
 [6,]  8.0  8.0  2.5  2.5
 [7,]  7.5  7.5  9.5  9.5
 [8,]  7.0  7.0  4.0  4.0
 [9,]  4.5  4.5  5.5  5.5
[10,] 10.0 10.0 13.0 13.0

> mglmOneWay(d[1:10,],design,dispersion=0)
$coefficients
        (Intercept)        group2
 [1,] -1.000000e+08  0.000000e+00
 [2,] -1.000000e+08  1.000000e+08
 [3,]  2.525729e+00 -5.108256e-01
 [4,]  2.525729e+00  1.484200e-01
 [5,]  2.140066e+00 -1.941560e-01
 [6,]  2.079442e+00 -1.163151e+00
 [7,]  2.014903e+00  2.363888e-01
 [8,]  1.945910e+00 -5.596158e-01
 [9,]  1.504077e+00  2.006707e-01
[10,]  2.302585e+00  2.623643e-01

$fitted.values
      [,1] [,2] [,3] [,4]
 [1,]  0.0  0.0  0.0  0.0
 [2,]  0.0  0.0  2.0  2.0
 [3,] 12.5 12.5  7.5  7.5
 [4,] 12.5 12.5 14.5 14.5
 [5,]  8.5  8.5  7.0  7.0
 [6,]  8.0  8.0  2.5  2.5
 [7,]  7.5  7.5  9.5  9.5
 [8,]  7.0  7.0  4.0  4.0
 [9,]  4.5  4.5  5.5  5.5
[10,] 10.0 10.0 13.0 13.0

> 
> fit <- glmFit(d,design,dispersion=d$common.dispersion)
> lrt <- glmLRT(d,fit,coef=2)
> topTags(lrt)
Coefficient:  group2 
         logConc         logFC        LR    P.Value       FDR
Tag.17 -4.446814  2.075116e+00 6.0485417 0.01391779 0.3058697
Tag.2  -6.910425  1.442695e+08 4.8400348 0.02780633 0.3058697
Tag.21 -4.740745 -1.757740e+00 4.0777825 0.04345065 0.3186381
Tag.6  -5.251712 -1.681113e+00 3.0078205 0.08286364 0.4557500
Tag.16 -4.583298  9.447004e-01 1.3477682 0.24566867 0.8276702
Tag.20 -4.425464  8.637539e-01 1.1890032 0.27553071 0.8276702
Tag.19 -4.799990 -8.103825e-01 0.9279152 0.33540526 0.8276702
Tag.12 -3.992555  7.130994e-01 0.9095513 0.34023349 0.8276702
Tag.3  -4.607548 -7.395680e-01 0.8300307 0.36226364 0.8276702
Tag.8  -5.205333 -8.107246e-01 0.7830377 0.37621371 0.8276702
> 
> fit <- glmFit(d,design)
> lrt <- glmLRT(d,fit,coef=2)
> topTags(lrt)
Coefficient:  group2 
         logConc         logFC        LR    P.Value       FDR
Tag.17 -4.446830  2.075114e+00 5.4810400 0.01922382 0.2456700
Tag.2  -6.910480  1.442695e+08 4.6156803 0.03168093 0.2456700
Tag.21 -4.740773 -1.757748e+00 4.5200192 0.03350046 0.2456700
Tag.6  -5.251719 -1.681109e+00 3.0784570 0.07933576 0.4363467
Tag.16 -4.583285  9.446959e-01 1.4583505 0.22719275 0.8319120
Tag.19 -4.799996 -8.103580e-01 1.1100756 0.29206551 0.8319120
Tag.20 -4.425469  8.637455e-01 1.0438808 0.30692061 0.8319120
Tag.3  -4.607550 -7.395723e-01 0.8576498 0.35439721 0.8319120
Tag.8  -5.205301 -8.108191e-01 0.6159918 0.43254068 0.8319120
Tag.12 -3.992562  7.130717e-01 0.6093578 0.43502971 0.8319120
> 
> dglm <- estimateGLMCommonDisp(d,design)
> dglm$common.dispersion
[1] 0.2033282
> dglm <- estimateGLMTagwiseDisp(dglm,design)
> summary(dglm$tagwise.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.1756  0.1879  0.1998  0.2031  0.2135  0.2578 
> fit <- glmFit(dglm,design)
> lrt <- glmLRT(dglm,fit,coef=2)
> topTags(lrt)
Coefficient:  group2 
         logConc         logFC        LR     P.Value       FDR
Tag.17 -4.446791  2.075118e+00 6.8001118 0.009115216 0.2005348
Tag.2  -6.910420  1.442695e+08 4.8594096 0.027495744 0.2872068
Tag.21 -4.740756 -1.757743e+00 4.2537154 0.039164558 0.2872068
Tag.6  -5.251729 -1.681104e+00 3.1763761 0.074710253 0.4109064
Tag.16 -4.583290  9.446977e-01 1.4126709 0.234613511 0.8499599
Tag.20 -4.425460  8.637585e-01 1.2721097 0.259371274 0.8499599
Tag.19 -4.799990 -8.103837e-01 0.9190392 0.337727380 0.8499599
Tag.12 -3.992556  7.130986e-01 0.9014515 0.342392806 0.8499599
Tag.3  -4.607552 -7.395760e-01 0.8817937 0.347710872 0.8499599
Tag.8  -5.205324 -8.107513e-01 0.7356185 0.391068048 0.8603497
> dglm <- estimateGLMTrendedDisp(dglm,design)
> summary(dglm$trended.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.05079 0.17290 0.18430 0.18090 0.21150 0.26750 
> dglm <- estimateGLMTrendedDisp(dglm,design,method="power")
> summary(dglm$tagwise.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.1756  0.1879  0.1998  0.2031  0.2135  0.2578 
> dglm <- estimateGLMTrendedDisp(dglm,design,method="spline")
Loading required package: splines
> summary(dglm$tagwise.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.1756  0.1879  0.1998  0.2031  0.2135  0.2578 
> dglm <- estimateGLMTrendedDisp(dglm,design,method="bin.spline")
Warning messages:
1: In binGLMDispersion(y, design, min.n = min.n, offset = offset, method = method.bin,  :
  With 22 genes and setting the parameter minimum number (min.n) of genes per bin to 500,  there should technically be fewer than 2 bins. To make estimation of trended dispersions possible we set the number of bins to be 2.

2: In binGLMDispersion(y, design, min.n = min.n, offset = offset, method = method.bin,  :
  With 22 genes and setting the parameter minimum number (min.n) of genes per bin to 500,  there are only 2 bins. Using 2 bins here means that the minimum number of genes in each of the 2 bins is in fact 10. This number of bins and minimum number of genes per bin may not be sufficient for reliable estimation of a trend on the dispersions.

> summary(dglm$tagwise.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.1756  0.1879  0.1998  0.2031  0.2135  0.2578 
> dglm <- estimateGLMTagwiseDisp(dglm,design)
Warning message:
In movingAverageByCol(apl[o, ], width = 1000) :
  reducing moving average width to nrow(x)
> summary(dglm$tagwise.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0475  0.1195  0.2201  0.3637  0.2745  2.1170 
> 
> example(glmFit)

glmFit> nlibs <- 3

glmFit> ntags <- 100

glmFit> dispersion.true <- 0.1

glmFit> # Make first transcript respond to covariate x
glmFit> x <- 0:2

glmFit> design <- model.matrix(~x)

glmFit> beta.true <- cbind(Beta1=2,Beta2=c(2,rep(0,ntags-1)))

glmFit> mu.true <- 2^(beta.true %*% t(design))

glmFit> # Generate count data
glmFit> y <- rnbinom(ntags*nlibs,mu=mu.true,size=1/dispersion.true)

glmFit> y <- matrix(y,ntags,nlibs)

glmFit> colnames(y) <- c("x0","x1","x2")

glmFit> rownames(y) <- paste("Gene",1:ntags,sep="")

glmFit> d <- DGEList(y)
Calculating library sizes from column totals.

glmFit> # Normalize
glmFit> d <- calcNormFactors(d)

glmFit> # Fit the NB GLMs
glmFit> fit <- glmFit(d, design, dispersion=dispersion.true)

glmFit> # Likelihood ratio tests for trend
glmFit> results <- glmLRT(d, fit, coef=2)

glmFit> topTags(results)
Coefficient:  x 
         logConc      logFC        LR      P.Value          FDR
Gene1  -2.340971  2.5201464 34.704021 3.838380e-09 3.838380e-07
Gene25 -5.778402 -5.3406150  7.428649 6.419352e-03 3.209676e-01
Gene10 -4.591030  1.7101276  6.153048 1.311858e-02 4.372861e-01
Gene22 -4.770798 -1.4644680  4.684651 3.043325e-02 7.608313e-01
Gene81 -4.762333 -1.4210081  3.965916 4.643025e-02 8.688871e-01
Gene5  -4.519740  1.0070752  2.819059 9.315101e-02 8.688871e-01
Gene37 -4.599340 -1.0273745  2.789767 9.486804e-02 8.688871e-01
Gene34 -4.522759  0.9422221  2.649492 1.035830e-01 8.688871e-01
Gene29 -4.863341 -1.0869898  2.626186 1.051140e-01 8.688871e-01
Gene71 -4.331451 -0.8896148  2.597055 1.070625e-01 8.688871e-01

glmFit> # Estimate the dispersion (may be unreliable with so few tags)
glmFit> d <- estimateGLMCommonDisp(d, design)

glmFit> d$common.dispersion
[1] 0.07570848
> glmFit(d,design,dispersion=dispersion.true,method="simple")
Loading required package: MASS
An object of class "DGEGLM"
$coefficients
      (Intercept)         x
Gene1   -4.958826 1.7468331
Gene2   -4.590194 0.3414037
Gene3   -5.942512 0.8022505
Gene4   -4.669814 0.2025729
Gene5   -5.370693 0.6980507
95 more rows ...

$df.residual
[1] 1 1 1 1 1
95 more elements ...

$deviance
[1] 0.53374778 0.20168294 4.18933184 0.69542655 0.00796757
95 more elements ...

$design
  (Intercept) x
1           1 0
2           1 1
3           1 2
attr(,"assign")
[1] 0 1

$offset
         [,1]     [,2]     [,3]
[1,] 6.099264 6.016736 6.067465
[2,] 6.099264 6.016736 6.067465
[3,] 6.099264 6.016736 6.067465
[4,] 6.099264 6.016736 6.067465
[5,] 6.099264 6.016736 6.067465
95 more rows ...

$dispersion
[1] 0.1

$weights
     [,1] [,2] [,3]
[1,]    1    1    1
[2,]    1    1    1
[3,]    1    1    1
[4,]    1    1    1
[5,]    1    1    1
95 more rows ...

$fitted.values
            x0        x1        x2
Gene1 3.128139 16.522832 99.713904
Gene2 4.522520  5.858801  8.671811
Gene3 1.169705  2.402414  5.637571
Gene4 4.176401  4.709091  6.066590
Gene5 2.072117  3.834708  8.108175
95 more rows ...

$abundance
    Gene1     Gene2     Gene3     Gene4     Gene5 
-2.340971 -4.213249 -4.957796 -4.454150 -4.519740 
95 more elements ...

$method
[1] "simple"

$counts
      x0 x1  x2
Gene1  4 13 107
Gene2  4  7   8
Gene3  0  5   4
Gene4  5  3   7
Gene5  2  4   8
95 more rows ...

$samples
   group lib.size norm.factors
x0     1      402    1.1082828
x1     1      384    1.0683263
x2     1      511    0.8445892

> glmFit(d,design,dispersion=dispersion.true,method="levenberg")
Loading required package: statmod
An object of class "DGEGLM"
$coefficients
      (Intercept)         x
Gene1   -4.958823 1.7468312
Gene2   -4.590203 0.3414124
Gene3   -5.942542 0.8022798
Gene4   -4.669815 0.2025741
Gene5   -5.370694 0.6980515
95 more rows ...

$deviance
[1] 0.53374778 0.20168294 4.18933184 0.69542655 0.00796757
95 more elements ...

$design
  (Intercept) x
1           1 0
2           1 1
3           1 2
attr(,"assign")
[1] 0 1

$offset
         [,1]     [,2]     [,3]
[1,] 6.099264 6.016736 6.067465
[2,] 6.099264 6.016736 6.067465
[3,] 6.099264 6.016736 6.067465
[4,] 6.099264 6.016736 6.067465
[5,] 6.099264 6.016736 6.067465
95 more rows ...

$dispersion
[1] 0.1 0.1 0.1 0.1 0.1
95 more elements ...

$fitted.values
            x0        x1        x2
Gene1 3.128147 16.522846 99.713802
Gene2 4.522480  5.858800  8.671883
Gene3 1.169671  2.402414  5.637736
Gene4 4.176397  4.709091  6.066597
Gene5 2.072114  3.834707  8.108180
95 more rows ...

$df.residual
[1] 1 1 1 1 1
95 more elements ...

$abundance
    Gene1     Gene2     Gene3     Gene4     Gene5 
-2.340971 -4.213249 -4.957796 -4.454150 -4.519740 
95 more elements ...

$method
[1] "levenberg"

$counts
      x0 x1  x2
Gene1  4 13 107
Gene2  4  7   8
Gene3  0  5   4
Gene4  5  3   7
Gene5  2  4   8
95 more rows ...

$samples
   group lib.size norm.factors
x0     1      402    1.1082828
x1     1      384    1.0683263
x2     1      511    0.8445892

> 
> y <- matrix(rnbinom(20,mu=10,size=3/2),nrow=5)
> group <- factor(c(1,1,2,2))
> ys <- splitIntoGroupsPseudo(y,group,pair=c(1,2))
> exactTestDoubleTail(ys$y1,ys$y2,dispersion=2/3)
[1] 0.4189923 0.4429949 0.7353656 0.5497263 0.8017048
> 
> y <- matrix(rnbinom(5*7,mu=10,size=3/2),nrow=5,ncol=7)
> group <- factor(c(1,1,2,2,3,3,3))
> ys <- splitIntoGroupsPseudo(y,group,pair=c(1,3))
> exactTestDoubleTail(ys$y1,ys$y2,dispersion=2/3)
[1] 0.5546390 0.3424727 0.7399625 0.4927107 0.3657264
> exactTestBetaApprox(ys$y1,ys$y2,dispersion=2/3)
[1] 0.5571358 0.3423395 0.7370448 0.4924267 0.3656123
> 
> y[1,3:4] <- 0
> design <- model.matrix(~group)
> fit <- glmFit(y,design,dispersion=2/3)
> summary(fit$coef)
  (Intercept)         group2               group3          
 Min.   :-2.101   Min.   :-1.000e+08   Min.   :-3.712e-01  
 1st Qu.:-2.101   1st Qu.:-6.522e-01   1st Qu.:-1.561e-01  
 Median :-1.566   Median : 1.096e-01   Median :-4.011e-03  
 Mean   :-1.678   Mean   :-2.000e+07   Mean   : 3.893e-02  
 3rd Qu.:-1.476   3rd Qu.: 1.394e-01   3rd Qu.:-6.897e-05  
 Max.   :-1.147   Max.   : 4.259e-01   Max.   : 7.261e-01  
> 
> 
